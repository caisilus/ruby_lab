# Name of your application. Used to uniquely configure containers.
service: ruby_lab

# Name of the container image.
image: caisilus/ruby_lab

# Deploy to these servers.
servers:
  - 77.91.123.194

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: caisilus

  # Always use an access token rather than real password when possible.
  password:
    - MRSK_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
env:
 clear:
   DEV_URL: http://77.91.123.194
   DB_HOST: 77.91.123.194
   RAILS_SERVE_STATIC_FILES: true
   RAILS_LOG_TO_STDOUT: true
   SANDBOX_DIRECTORY: "/"
 secret:
   - RAILS_MASTER_KEY
   - GITHUB_CLIENT_ID
   - GITHUB_CLIENT_SECRET
   - POSTGRES_PASSWORD

# Call a broadcast command on deploys.
# audit_broadcast_cmd:
#   bin/broadcast_to_bc

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
accessories:
 db:
   image: postgres:latest
   host: 77.91.123.194
   port: 5432
   env:
     clear:
       POSTGRES_USER: ruby_lab
     secret:
       - POSTGRES_PASSWORD
   directories:
     - data:/var/lib/postgresql/data
 redis:
   image: redis:7.0
   host: 77.91.123.194
   port: 6379
   directories:
     - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000
